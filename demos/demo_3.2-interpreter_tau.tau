# To run it you need to compile the project using release.sh (customized with
# your settings if needed) and then execute the run.sh within the demo directory
# as follows:
#
# ./run.sh demo_3.2-interpreter_tau.tau
#
# This demo should work under any *nix flavour due to the paths used for files.
# To run it under windows you will need to change the paths to the files.

# This demo demonstrate the workings of the interpreter when considering inputs and
# outputs tau programs.

# Let us define the inputs/outputs from the console (of type tau)

tau i1 = console
tau o1 = console


# Now, let us consider a simple tau program which always output the same program
# (as the output doesn't depends on the inputs, we must specify the number of
# steps to be performed when running it).:

r o1[t] = { o1[t] = i1[t] }
n
n
q

# Now let us consider a program that take as inputs actual programs from the
# console.

r o1[t] = i1[t]
o1[t] = 0.

# Let us provide a slightly more complex example:

r o1[t] = i1[t]'
always o1[t] = 0.

# Now, let us go into the rabbit hole of recursion. Let us consider the above
# program but let us provide as input a program that sometimes return a program
# that returns the same program.

r o1[t] = i1[t]'
sometimes o1[t] =  { o1[t] = i1[t] }.

# In the future we would provide more complex examples, but we
# guess you have a taste of how the interpreter works, at least in simple cases.
#

q
